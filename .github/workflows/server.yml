name: Deploy API (server) to Azure Web App

on:
  push:
    branches: [main]
    paths:
      - "server/**"
      - ".github/workflows/server.yml"
  workflow_dispatch:

env:
  APP_NAME: clinical-ai-assistant # your Azure Web App name
  NODE_VERSION: "22.x" # match your App Service runtime
  ARTIFACT_NAME: server-dist

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Optional: run tests/build ONLY for server
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install (server)
        working-directory: server
        run: npm ci || npm install

      - name: Build (server)
        working-directory: server
        run: npm run build --if-present

      # Don't ship node_modules created on CI; let Azure build them
      - name: Remove node_modules before packaging
        working-directory: server
        run: rm -rf node_modules

      - name: Upload artifact (server only)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: server
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App (server only)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: Production
          package: ./${{ env.ARTIFACT_NAME }}
          # startup-command: "npm start"  # uncomment if you don't have "start" script
